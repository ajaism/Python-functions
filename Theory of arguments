=========================================
			1) Possitional Arguments (or) Parameters
		=========================================
=>The Concept of Possitional Parameters (or) arguments says that "The Number of Arguments (Actual Parameters) must be equal to the number of formal paraemeters ".
=>This Parameter mechanism also recommends Order of Parameters for Higher accuracy.
=>Python Programming Environment follows by default Possitional Parameters. 
-----------------------------------------------
Syntax for Function Definition :
-----------------------------------------------
	def    functionname(parm1,param2.....param-n):
		-------------------------------------------------
		-------------------------------------------------

-----------------------------------------------
Syntax for Function Call:
-----------------------------------------------
		functionname(arg1,arg2....arg-n)
=>Here the values of arg1,arg2...arg-n are passing to param-1,param-2..param-n respectively.


======================================
			2) Default  Parameters (or) arguments
		======================================
=>When there is a Common Value for family of Function Calls then Such type of Common Value(s) must be taken  as default parameter with common value (But not recommended to pass by using Posstional Parameters)

Syntax: for Function Definition with Default Parameters
----------------------------------------------------------------------------------------
def   functionname(param1,param2,....param-n-1=Val1, Param-n=Val2):
          ------------------------------------------------------------------
	  ------------------------------------------------------------------

Here param-n-1 and param-n are called "default Parameters"
   and param1,param-2... are called "Possitional paramsters"

Rule-: When we use default parameters in the function definition, They must be used as last Parameter(s) otherwise we get Error( SyntaxError: non-default argument follows default argument).



============================================
			3) Keyword Parameters (or) arguments
		============================================
=>In some of the circumstances, we know the function name and formal parameter names and we don't know the order of formal Parameter names and to pass the data / values accurately we must use the concept of Keyword Parameters (or) arguments.
=>The implementation of Keyword Parameters (or) arguments says that all the formal parameter names used as arguments in Function call(s) as keys.

Syntax for function definition:-
-------------------------------------------------
def    functionname(param1,param2...param-n):
         ---------------------------------------------
	 ---------------------------------------------

Syntax for function call:-
-------------------------------------------------
	functionname(param-n=val-n,param1=val1,param-n-1=val-n-1,......)

Here param-n=val-n,param1=val1,param-n-1=val-n-1,...... are called Keywords arguments
